C51 COMPILER V9.60.0.0   IIC                                                               04/25/2025 16:26:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\IIC.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE sources\IIC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Headers;.\sources) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\IIC.lst) TABS(2) OBJECT(.\Objects\IIC.obj)

line level    source

   1          #include "IIC.h"
   2          /**********************************************
   3          //IIC Start I2C发送起始
   4          **********************************************/
   5          void IIC_Start()
   6          {
   7   1        OLED_SCLK_Set();
*** WARNING C206 IN LINE 7 OF sources\IIC.c: 'OLED_SCLK_Set': missing function-prototype
   8   1        OLED_SDIN_Set();
*** WARNING C206 IN LINE 8 OF sources\IIC.c: 'OLED_SDIN_Set': missing function-prototype
   9   1        OLED_SDIN_Clr();
*** WARNING C206 IN LINE 9 OF sources\IIC.c: 'OLED_SDIN_Clr': missing function-prototype
  10   1        OLED_SCLK_Clr();
*** WARNING C206 IN LINE 10 OF sources\IIC.c: 'OLED_SCLK_Clr': missing function-prototype
  11   1      }
  12          
  13          /**********************************************
  14          //IIC Stop  I2C发送结束
  15          **********************************************/
  16          void IIC_Stop()
  17          {
  18   1        OLED_SCLK_Set();
  19   1        OLED_SDIN_Clr();
  20   1        OLED_SDIN_Set();
  21   1      }
  22          
  23          /**********************************************
  24          //IIC wait  I2C等待接受应答
  25          **********************************************/
  26          void IIC_Wait_Ack()
  27          {
  28   1        OLED_SCLK_Set();
  29   1        OLED_SCLK_Clr();
  30   1      }
  31          
  32          /**********************************************
  33          // IIC Write byte 写入字节
  34          **********************************************/
  35          void Write_IIC_Byte(unsigned char IIC_Byte)
  36          {
  37   1        unsigned char i;
  38   1        unsigned char m, da;
  39   1        da = IIC_Byte;  //要写入的字节
  40   1        OLED_SCLK_Clr();
  41   1        for (i = 0; i < 8; i++) //循环八次进行掩码  
  42   1        {
  43   2          m = da;
  44   2          //  OLED_SCLK_Clr();
  45   2          m = m & 0x80;       //1000 0000 从最高位开始取位 直至取完
  46   2          if (m == 0x80)        //若该位为1
  47   2          {
  48   3            OLED_SDIN_Set();
  49   3          }   //传1
  50   2          else OLED_SDIN_Clr(); //为0传0
C51 COMPILER V9.60.0.0   IIC                                                               04/25/2025 16:26:03 PAGE 2   

  51   2          da = da << 1;     //转下一位
  52   2          OLED_SCLK_Set();    //本次写入结束
  53   2          OLED_SCLK_Clr();
  54   2        }
  55   1      }
  56          
  57          /**********************************************
  58          // IIC Write Command 写命令
  59          **********************************************/
  60          void Write_IIC_Command(unsigned char IIC_Command)
  61          {
  62   1        IIC_Start();
  63   1        Write_IIC_Byte(0x78);            //Slave address,SA0=0 从机地址0x78
  64   1        IIC_Wait_Ack();
  65   1        Write_IIC_Byte(0x00);     //write command
  66   1        IIC_Wait_Ack();
  67   1        Write_IIC_Byte(IIC_Command);
  68   1        IIC_Wait_Ack();
  69   1        IIC_Stop();
  70   1      }
  71          /**********************************************
  72          // IIC Write Data 写数据
  73          **********************************************/
  74          void Write_IIC_Data(unsigned char IIC_Data)
  75          {
  76   1        IIC_Start();
  77   1        Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
  78   1        IIC_Wait_Ack();
  79   1        Write_IIC_Byte(0x40);     //write data
  80   1        IIC_Wait_Ack();
  81   1        Write_IIC_Byte(IIC_Data);
  82   1        IIC_Wait_Ack();
  83   1        IIC_Stop();
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    169    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)

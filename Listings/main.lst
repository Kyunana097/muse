C51 COMPILER V9.60.0.0   MAIN                                                              04/20/2025 16:26:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Headers;.\sources) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Headers/bmp.h"
   3          #include "Headers/oled.h"
   4          #include "Headers/oledfont.h"
   5          #include "Headers/RTX51TNY.H>
   6          
   7          // 修复1：删除重复声明
   8          sbit KEY1 = P3 ^ 1;
   9          sbit KEY2 = P3 ^ 0;
  10          sbit KEY3 = P3 ^ 2;
  11          sbit KEY4 = P3 ^ 3;
  12          
  13          // 游戏状态变量
  14          volatile unsigned char game_state = 0;    // 使用volatile
  15          volatile unsigned char setting_state = 0;
  16          volatile unsigned char score_state = 0;
  17          volatile unsigned char board_num = 0;
  18          
  19          // 初始化任务
  20          void task_init(void) _task_ 0
  21          {
  22   1          P2 = 0xFF;
  23   1          OLED_Init();
  24   1          OLED_DrawBMP(0, 0, 128, 8, BMP1);
  25   1          os_wait(K_IVL, 50, 0);
  26   1      
  27   1          os_create_task(1);  // 按键任务（优先级1）
  28   1          os_create_task(2);  // 菜单任务（优先级2）
  29   1          os_create_task(3);  // 游戏任务（优先级3）
  30   1          os_create_task(4);  // 积分任务（优先级4）
  31   1      
  32   1          os_delete_task(0);  // 删除自身
  33   1          while (1);  // 修复2：阻止任务重生
  34   1      }
  35          
  36          // 按键任务
  37          void task_key(void) _task_ 1
  38          {
  39   1          unsigned char key1_pressed = 0;
  40   1          unsigned char key2_pressed = 0;
  41   1          unsigned char key3_pressed = 0;
  42   1          unsigned char key4_pressed = 0;
  43   1      
  44   1          while (1)
  45   1          {
  46   2              // 修复3：修正拼写错误
  47   2              if (!KEY1 && !key1_pressed)
  48   2              {
  49   3                  os_wait(K_IVL, 20, 0); // 消抖
  50   3                  if (!KEY1)
  51   3                  {
  52   4                      os_disable_isr();
*** WARNING C206 IN LINE 52 OF main.c: 'os_disable_isr': missing function-prototype
  53   4                      board_num = (board_num == 0) ? 2 : board_num - 1;
C51 COMPILER V9.60.0.0   MAIN                                                              04/20/2025 16:26:43 PAGE 2   

  54   4                      key1_pressed = 1;
  55   4                      os_enable_isr();
*** WARNING C206 IN LINE 55 OF main.c: 'os_enable_isr': missing function-prototype
  56   4                  }
  57   3              }
  58   2              else if (KEY1)
  59   2              {
  60   3                  key1_pressed = 0;
  61   3              }
  62   2      
  63   2              if (!KEY2 && !key2_pressed)
  64   2              {
  65   3                  os_wait(K_IVL, 20, 0);
  66   3                  if (!KEY2)
  67   3                  {
  68   4                      os_disable_isr();
  69   4                      board_num = (board_num + 1) % 3;
  70   4                      key2_pressed = 1;
  71   4                      os_enable_isr();
  72   4                  }
  73   3              }
  74   2              else if (KEY2)
  75   2              {
  76   3                  key2_pressed = 0;
  77   3              }
  78   2      
  79   2              if (!KEY3 && !key3_pressed)
  80   2              {
  81   3                  os_wait(K_IVL, 20, 0);
  82   3                  if (!KEY3)
  83   3                  {
  84   4                      os_disable_isr();
  85   4                      if (board_num == 0) game_state = 1;
  86   4                      if (board_num == 1) setting_state = 1;
  87   4                      if (board_num == 2) score_state = 1;
  88   4                      key3_pressed = 1;
  89   4                      os_enable_isr();
  90   4                  }
  91   3              }
  92   2              else if (KEY3)
  93   2              {
  94   3                  key3_pressed = 0;
  95   3              }
  96   2      
  97   2              os_wait(K_IVL, 50, 0);  // 50ms扫描周期
  98   2          }
  99   1      }
 100          
 101          // 菜单任务
 102          void task_board(void) _task_ 2
 103          {
 104   1          P2 = 0xAA;
 105   1          OLED_Clear();
 106   1          while (1)
 107   1          {
 108   2              OLED_ShowString(25, 0, "Start", 16);
 109   2              OLED_ShowString(25, 3, "Setting", 16);
 110   2              OLED_ShowString(25, 6, "Score", 16);
 111   2              os_wait(K_IVL, 200, 0);  // 优化刷新率
 112   2          }
 113   1      }
 114          
C51 COMPILER V9.60.0.0   MAIN                                                              04/20/2025 16:26:43 PAGE 3   

 115          // 游戏任务
 116          void task_game(void) _task_ 3
 117          {
 118   1          while (1)  // 修复5：使用永久循环
 119   1          {
 120   2              if (game_state == 1)
 121   2              {
 122   3                  P2 = 0x01;
 123   3                  // 添加游戏逻辑
 124   3                  os_wait(K_TMO, 30, 0);
 125   3              }
 126   2              else
 127   2              {
 128   3                  os_wait(K_IVL, 100, 0);
 129   3              }
 130   2          }
 131   1      }
 132          
 133          // 积分任务
 134          void task_score(void) _task_ 4
 135          {
 136   1          while (1)
 137   1          {
 138   2              if (score_state == 1)
 139   2              {
 140   3                  P2 = 0x02;
 141   3                  // 添加积分显示逻辑
 142   3                  os_wait(K_TMO, 50, 0);
 143   3              }
 144   2              else
 145   2              {
 146   3                  os_wait(K_IVL, 100, 0);
 147   3              }
 148   2          }
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    386    ----
   CONSTANT SIZE    =   1044    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)

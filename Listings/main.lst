C51 COMPILER V9.60.0.0   MAIN                                                              04/29/2025 11:51:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Headers;.\sources) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /* MAIN.C */
   2          #include <REGX52.H>
   3          #include "OLED.h"
   4          #include "RTX51TNY.H"
   5          #include "Music.h"
   6          #include "Note.h"
   7          #include "Key.h"
   8          #include "AT24C02.h"
   9          
  10          /* 硬件引脚定义 */
  11          sbit BUZZER = P2 ^ 5;
  12          
  13          /* 全局状态变量（使用bit节省内存） */
  14          bit game_state = 0;     // 0:菜单 1:游戏
  15          bit setting_mode = 0;   // 0:正常 1:设置
  16          bit show_info = 0;      // 信息显示标志
  17          bit music_playing = 0;  // 音乐播放标志
  18          
  19          /* 游戏数据存储优化 */
  20          idata struct {
  21              unsigned char track;      // 当前轨道
  22              unsigned char speed;      // 游戏速度
  23              unsigned int score;       // 当前分数
  24              unsigned int hi_score[2]; // 历史最高分
  25          } game_data;
  26          
  27          /* 显示缓冲区（减少OLED刷新次数） */
  28          xdata char disp_buf[16];
  29          
  30          /********************* 任务定义 *********************/
  31          /* 初始化任务 */
  32          void init_task(void) _task_ 0 {
  33   1          // 硬件初始化
  34   1          P2 = 0xFF;
  35   1          OLED_Init();
  36   1          Music_Init(Track1); // 默认初始化
  37   1      
  38   1          // 从EEPROM加载最高分
  39   1          game_data.hi_score[0] = AT24C02_ReadValue(0x00);
  40   1          game_data.hi_score[1] = AT24C02_ReadValue(0x04);
  41   1      
  42   1          // 创建其他任务
  43   1          os_create_task(1); // 输入处理
  44   1          os_create_task(2); // 游戏逻辑
  45   1          os_create_task(3); // 显示更新
  46   1      
  47   1          os_delete_task(0); // 删除自身
  48   1      }
  49          
  50          /* 输入处理任务 */
  51          void input_task(void) _task_ 1 {
  52   1          static bit key_lock = 0;
  53   1      
  54   1          while (1) {
C51 COMPILER V9.60.0.0   MAIN                                                              04/29/2025 11:51:36 PAGE 2   

  55   2              unsigned char key = Key();
  56   2      
  57   2              if (!key_lock && key) {
  58   3                  key_lock = 1;
  59   3      
  60   3                  /* 菜单导航 */
  61   3                  if (!game_state && !setting_mode) {
  62   4                      switch (key) {
  63   5                      case 1: // 上
  64   5                          if (game_data.track > 1) game_data.track--;
  65   5                          break;
  66   5                      case 2: // 下
  67   5                          if (game_data.track < 2) game_data.track++;
  68   5                          break;
  69   5                      case 3: // 确认
  70   5                          if (game_data.track == 3) {
  71   6                              setting_mode = 1;
  72   6                          }
  73   5                          else {
  74   6                              game_state = 1;
  75   6                          }
  76   5                          break;
  77   5                      }
  78   4                  }
  79   3      
  80   3                  /* 游戏控制 */
  81   3                  if (game_state) {
  82   4                      // 音符命中检测
  83   4                      if (key == 1 || key == 2) {
  84   5                          unsigned char res = check_key_hit(game_data.speed, key);
  85   5                          update_score(res);
*** WARNING C206 IN LINE 85 OF main.c: 'update_score': missing function-prototype
*** ERROR C267 IN LINE 85 OF main.c: 'update_score': requires ANSI-style prototype
  86   5                      }
  87   4                  }
  88   3      
  89   3                  /* 设置模式 */
  90   3                  if (setting_mode) {
  91   4                      switch (key) {
  92   5                      case 1: // 加速
  93   5                          if (game_data.speed < 8) game_data.speed++;
  94   5                          break;
  95   5                      case 2: // 减速
  96   5                          if (game_data.speed > 1) game_data.speed--;
  97   5                          break;
  98   5                      case 3: // 退出设置
  99   5                          setting_mode = 0;
 100   5                          break;
 101   5                      }
 102   4                  }
 103   3              }
 104   2      
 105   2              if (!key) key_lock = 0;
 106   2              os_wait(K_IVL, 10, 0);
 107   2          }
 108   1      }
 109          
 110          /* 游戏逻辑任务 */
 111          void game_task(void) _task_ 2 {
 112   1          static unsigned char timer = 0;
 113   1      
 114   1          while (1) {
C51 COMPILER V9.60.0.0   MAIN                                                              04/29/2025 11:51:36 PAGE 3   

 115   2              if (game_state) {
 116   3                  // 音符生成（每5次循环生成）
 117   3                  if (++timer >= 5) {
 118   4                      note_spawn(game_data.speed, track);
 119   4                      timer = 0;
 120   4                  }
 121   3      
 122   3                  // 更新音符位置
 123   3                  update_note_positions(game_data.speed);
 124   3      
 125   3                  // 音乐播放控制
 126   3                  if (!music_playing) {
 127   4                      music_playing = 1;
 128   4                      os_create_task(4); // 启动音乐任务
 129   4                  }
 130   3              }
 131   2              os_wait(K_IVL, 50, 0);
 132   2          }
 133   1      }
 134          
 135          /* 显示更新任务 */
 136          void display_task(void) _task_ 3 {
 137   1          while (1) {
 138   2              OLED_Clear();
 139   2      
 140   2              if (setting_mode) {
 141   3                  // 设置界面显示
 142   3                  sprintf(disp_buf, "SPEED:%2d", game_data.speed);
 143   3                  OLED_ShowString(16, 2, disp_buf, 16);
 144   3                  OLED_ShowString(16, 5, "3 TO EXIT", 8);
 145   3              }
 146   2              else if (game_state) {
 147   3                  // 游戏界面显示
 148   3                  sprintf(disp_buf, "SCORE:%04u", game_data.score);
 149   3                  OLED_ShowString(0, 0, disp_buf, 16);
 150   3                  sprintf(disp_buf, "COMBO:%03u", combo);
 151   3                  OLED_ShowString(0, 4, disp_buf, 16);
 152   3              }
 153   2              else {
 154   3                  // 主菜单显示
 155   3                  OLED_ShowString(16, 0, "1.TRACK1", 8);
 156   3                  OLED_ShowString(16, 2, "2.TRACK2", 8);
 157   3                  OLED_ShowString(16, 4, "3.SETTING", 8);
 158   3                  // 显示最高分
 159   3                  sprintf(disp_buf, "HI:%04u", game_data.hi_score[game_data.track - 1]);
 160   3                  OLED_ShowString(80, 6, disp_buf, 8);
 161   3              }
 162   2      
 163   2              os_wait(K_IVL, 200, 0);
 164   2          }
 165   1      }
 166          
 167          /* 音乐播放任务 */
 168          void music_task(void) _task_ 4 {
 169   1          while (music_playing) {
 170   2              Music_PlayFullTrack();
 171   2              os_wait(K_IVL, 10, 0);
 172   2          }
 173   1          os_delete_task(4);
 174   1      }
 175          
 176          /********************* 工具函数 *********************/
C51 COMPILER V9.60.0.0   MAIN                                                              04/29/2025 11:51:36 PAGE 4   

 177          void update_score(unsigned char result) {
 178   1          // 得分计算逻辑
 179   1          static const unsigned char score_table[4] = { 0, 10, 30, 50 };
 180   1      
 181   1          if (result) {
 182   2              game_data.score += score_table[result];
 183   2              if (game_data.score > 1000) game_data.score = 1000;
 184   2              combo++;
 185   2          }
 186   1          else {
 187   2              combo = 0;
 188   2          }
 189   1      }
 190          
 191          void save_hi_score(void) {
 192   1          if (game_data.score > game_data.hi_score[game_data.track - 1]) {
 193   2              game_data.hi_score[game_data.track - 1] = game_data.score;
 194   2              AT24C02_WriteValue(0x00 + (game_data.track - 1) * 4, game_data.hi_score[game_data.track - 1]);
 195   2          }
 196   1      }

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)

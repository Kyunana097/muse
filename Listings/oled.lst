C51 COMPILER V9.60.0.0   OLED                                                              04/23/2025 23:53:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE sources\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Headers;.\sources) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127 
  14          
  15          
  16          
  17          /***********************Delay****************************************/
  18          void Delay_50ms(unsigned int Del_50ms)
  19          {
  20   1        unsigned int m;
  21   1        for(;Del_50ms>0;Del_50ms--)
  22   1          for(m=6245;m>0;m--);
  23   1      }
  24          
  25          void Delay_1ms(unsigned int Del_1ms)
  26          {
  27   1        unsigned char j;
  28   1        while(Del_1ms--)
  29   1        { 
  30   2          for(j=0;j<123;j++);
  31   2        }
  32   1      }
  33          
  34          
  35          /**********************************************
  36          //IIC Start I2C发送起始
  37          **********************************************/
  38          void IIC_Start()
  39          {
  40   1        OLED_SCLK_Set() ;
  41   1        OLED_SDIN_Set();
  42   1        OLED_SDIN_Clr();
  43   1        OLED_SCLK_Clr();
  44   1      }
  45          
  46          /**********************************************
  47          //IIC Stop  I2C发送结束
  48          **********************************************/
  49          void IIC_Stop()
  50          {
  51   1        OLED_SCLK_Set() ;
  52   1        OLED_SDIN_Clr();
  53   1        OLED_SDIN_Set();
  54   1      }
C51 COMPILER V9.60.0.0   OLED                                                              04/23/2025 23:53:58 PAGE 2   

  55          
  56          /**********************************************
  57          //IIC wait  I2C等待接受应答
  58          **********************************************/
  59          void IIC_Wait_Ack()
  60          {
  61   1        OLED_SCLK_Set() ;
  62   1        OLED_SCLK_Clr();
  63   1      }
  64          
  65          /**********************************************
  66          // IIC Write byte 写入字节
  67          **********************************************/
  68          void Write_IIC_Byte(unsigned char IIC_Byte)
  69          {
  70   1        unsigned char i;
  71   1        unsigned char m,da;
  72   1        da=IIC_Byte;  //要写入的字节
  73   1        OLED_SCLK_Clr();
  74   1        for(i=0;i<8;i++)  //循环八次进行掩码  
  75   1        {
  76   2            m=da;
  77   2          //  OLED_SCLK_Clr();
  78   2          m=m&0x80;       //1000 0000 从最高位开始取位 直至取完
  79   2          if(m==0x80)       //若该位为1
  80   2          {OLED_SDIN_Set();}    //传1
  81   2          else OLED_SDIN_Clr(); //为0传0
  82   2            da=da<<1;     //转下一位
  83   2          OLED_SCLK_Set();    //本次写入结束
  84   2          OLED_SCLK_Clr();
  85   2          }
  86   1      }
  87          
  88          /**********************************************
  89          // IIC Write Command 写命令
  90          **********************************************/
  91          void Write_IIC_Command(unsigned char IIC_Command)
  92          {
  93   1         IIC_Start();
  94   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0 从机地址0x78
  95   1        IIC_Wait_Ack(); 
  96   1         Write_IIC_Byte(0x00);      //write command
  97   1        IIC_Wait_Ack(); 
  98   1         Write_IIC_Byte(IIC_Command); 
  99   1        IIC_Wait_Ack(); 
 100   1         IIC_Stop();
 101   1      }
 102          /**********************************************
 103          // IIC Write Data 写数据
 104          **********************************************/
 105          void Write_IIC_Data(unsigned char IIC_Data)
 106          {
 107   1         IIC_Start();
 108   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 109   1         IIC_Wait_Ack();  
 110   1         Write_IIC_Byte(0x40);      //write data
 111   1         IIC_Wait_Ack();  
 112   1         Write_IIC_Byte(IIC_Data);
 113   1         IIC_Wait_Ack();  
 114   1         IIC_Stop();
 115   1      }
 116          void OLED_WR_Byte(unsigned dat,unsigned cmd)
C51 COMPILER V9.60.0.0   OLED                                                              04/23/2025 23:53:58 PAGE 3   

 117          {
 118   1        if(cmd)             //输入0写命令(OLED_CMD) 1写数据(OLED_DATA)
 119   1        {
 120   2          Write_IIC_Data(dat);
 121   2        }
 122   1        else 
 123   1        { 
 124   2          Write_IIC_Command(dat);
 125   2        }
 126   1      }
 127          
 128          /********************************************
 129          // fill_Picture 128位
 130          ********************************************/
 131          void fill_picture(unsigned char fill_Data)
 132          {
 133   1        unsigned char m,n;
 134   1        for(m=0;m<8;m++)
 135   1        {
 136   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 137   2          OLED_WR_Byte(0x00,0);   //low column start address
 138   2          OLED_WR_Byte(0x10,0);   //high column start address
 139   2          for(n=0;n<128;n++)
 140   2            {
 141   3              OLED_WR_Byte(fill_Data,1);
 142   3            }
 143   2        }
 144   1      }
 145          
 146          
 147          //坐标设置
 148          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 149          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 150   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 151   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 152   1      } 
 153          
 154          //开启OLED显示    
 155          void OLED_Display_On(void)
 156          {
 157   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 158   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 159   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 160   1      }
 161          
 162          //关闭OLED显示     
 163          void OLED_Display_Off(void)
 164          {
 165   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 166   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 167   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 168   1      }
 169          
 170          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 171          void OLED_Clear(void)  
 172          {  
 173   1        u8 i,n;       
 174   1        for(i=0;i<8;i++)  
 175   1        {  
 176   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 177   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 178   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
C51 COMPILER V9.60.0.0   OLED                                                              04/23/2025 23:53:58 PAGE 4   

 179   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 180   2        } //更新显示
 181   1      }
 182          
 183          //点亮函数 全写为1 整个屏幕点亮
 184          void OLED_On(void)  
 185          {  
 186   1        u8 i,n;       
 187   1        for(i=0;i<8;i++)  
 188   1        {  
 189   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 190   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 191   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 192   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 193   2        } //更新显示
 194   1      }
 195          
 196          //在指定位置显示一个字符,包括部分字符
 197          //x:0~127
 198          //y:0~63
 199          //mode:0,反色显示;1,正常显示         
 200          //size:选择字体 16/12 
 201          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 202          {       
 203   1        unsigned char c=0,i=0;  
 204   1          c=chr-' ';//得到偏移后的值      
 205   1          if(x>Max_Column-1){x=0;y=y+2;}
 206   1          if(Char_Size ==16)
 207   1          {
 208   2            OLED_Set_Pos(x,y);  
 209   2            for(i=0;i<8;i++)
 210   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 211   2            OLED_Set_Pos(x,y+1);
 212   2            for(i=0;i<8;i++)
 213   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 214   2          }
 215   1          else 
 216   1          { 
 217   2            OLED_Set_Pos(x,y);
 218   2            for(i=0;i<6;i++)
 219   2            OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 220   2          }
 221   1      }
 222          
 223          //m^n函数
 224          u32 oled_pow(u8 m,u8 n)
 225          {
 226   1        u32 result=1;  
 227   1        while(n--)result*=m;    
 228   1        return result;
 229   1      }     
 230          
 231          //显示2个数字
 232          //x,y :起点坐标  
 233          //len :数字的位数
 234          //size:字体大小
 235          //mode:模式 0,填充模式;1,叠加模式
 236          //num:数值(0~4294967295);       
 237          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 238          {           
 239   1        u8 t,temp;
 240   1        u8 enshow=0;               
C51 COMPILER V9.60.0.0   OLED                                                              04/23/2025 23:53:58 PAGE 5   

 241   1        for(t=0;t<len;t++)
 242   1        {
 243   2          temp=(num/oled_pow(10,len-t-1))%10;
 244   2          if(enshow==0&&t<(len-1))
 245   2          {
 246   3            if(temp==0)
 247   3            {
 248   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 249   4              continue;
 250   4            }else enshow=1; 
 251   3             
 252   3          }
 253   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 254   2        }
 255   1      } 
 256          
 257          //显示一个字符号串
 258          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 259          {
 260   1        unsigned char j=0;
 261   1        while (chr[j]!='\0')
 262   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 263   2            x+=8;
 264   2          if(x>120){x=0;y+=2;}
 265   2            j++;
 266   2        }
 267   1      }
 268          
 269          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 270          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 271          {   
 272   1       unsigned int j=0;
 273   1       unsigned char x,y;
 274   1        
 275   1        if(y1%8==0) y=y1/8;      
 276   1        else y=y1/8+1;
 277   1        for(y=y0;y<y1;y++)
 278   1        {
 279   2          OLED_Set_Pos(x0,y);
 280   2          for(x=x0;x<x1;x++)
 281   2            {      
 282   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 283   3            }
 284   2        }
 285   1      } 
 286          
 287          //初始化SSD1306             
 288          void OLED_Init(void)
 289          {   
 290   1       
 291   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 292   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 293   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 294   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 295   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 296   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 297   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 298   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 299   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 300   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
C51 COMPILER V9.60.0.0   OLED                                                              04/23/2025 23:53:58 PAGE 6   

 301   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 302   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 303   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 304   1        OLED_WR_Byte(0x00,OLED_CMD);//
 305   1        
 306   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 307   1        OLED_WR_Byte(0x80,OLED_CMD);//
 308   1        
 309   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 310   1        OLED_WR_Byte(0x05,OLED_CMD);//
 311   1        
 312   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 313   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 314   1        
 315   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 316   1        OLED_WR_Byte(0x12,OLED_CMD);//
 317   1        
 318   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 319   1        OLED_WR_Byte(0x30,OLED_CMD);//
 320   1        
 321   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 322   1        OLED_WR_Byte(0x14,OLED_CMD);//
 323   1        
 324   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 325   1      }  
 326          
 327          //水平滚动
 328          void OLED_roll(unsigned char track, unsigned char speed)
 329          {
 330   1        Write_IIC_Command(0x2D);//向右(0x2C)/向左(0x2D)滚动一列
 331   1        Write_IIC_Command(0x00);//dummy byte(空比特、虚拟字节),暂未发现其指令作用
 332   1        if (track == 1)
 333   1        {
 334   2          Write_IIC_Command(0x00);//设置滚动起始页地址
 335   2          Write_IIC_Command(0x01);//虚拟字节(设置为0x01)
 336   2          Write_IIC_Command(0x07);//设置滚动结束页  
 337   2        }
 338   1        else 
 339   1        {
 340   2          Write_IIC_Command(0x03);//设置滚动起始页地址
 341   2          Write_IIC_Command(speed-1);//设置滚动速度(0x00~0x07数值越小速度越慢)
 342   2          Write_IIC_Command(0x05);//设置滚动结束页  
 343   2        } 
 344   1        Write_IIC_Command(0x00);//设置起始列地址
 345   1        Write_IIC_Command(0x7F);//设置结束列地址
 346   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1267    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      37
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

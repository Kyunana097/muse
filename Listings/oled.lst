C51 COMPILER V9.60.0.0   OLED                                                              04/25/2025 16:08:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE sources\oled.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Headers;.\sources) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127 
  14          
  15          /**********************************************
  16          //IIC Start I2C发送起始
  17          **********************************************/
  18          void IIC_Start()
  19          {
  20   1        OLED_SCLK_Set() ;
  21   1        OLED_SDIN_Set();
  22   1        OLED_SDIN_Clr();
  23   1        OLED_SCLK_Clr();
  24   1      }
  25          
  26          /**********************************************
  27          //IIC Stop  I2C发送结束
  28          **********************************************/
  29          void IIC_Stop()
  30          {
  31   1        OLED_SCLK_Set() ;
  32   1        OLED_SDIN_Clr();
  33   1        OLED_SDIN_Set();
  34   1      }
  35          
  36          /**********************************************
  37          //IIC wait  I2C等待接受应答
  38          **********************************************/
  39          void IIC_Wait_Ack()
  40          {
  41   1        OLED_SCLK_Set() ;
  42   1        OLED_SCLK_Clr();
  43   1      }
  44          
  45          /**********************************************
  46          // IIC Write byte 写入字节
  47          **********************************************/
  48          void Write_IIC_Byte(unsigned char IIC_Byte)
  49          {
  50   1        unsigned char i;
  51   1        unsigned char m,da;
  52   1        da=IIC_Byte;  //要写入的字节
  53   1        OLED_SCLK_Clr();
  54   1        for(i=0;i<8;i++)  //循环八次进行掩码  
C51 COMPILER V9.60.0.0   OLED                                                              04/25/2025 16:08:42 PAGE 2   

  55   1        {
  56   2            m=da;
  57   2          //  OLED_SCLK_Clr();
  58   2          m=m&0x80;       //1000 0000 从最高位开始取位 直至取完
  59   2          if(m==0x80)       //若该位为1
  60   2          {OLED_SDIN_Set();}    //传1
  61   2          else OLED_SDIN_Clr(); //为0传0
  62   2            da=da<<1;     //转下一位
  63   2          OLED_SCLK_Set();    //本次写入结束
  64   2          OLED_SCLK_Clr();
  65   2          }
  66   1      }
  67          
  68          /**********************************************
  69          // IIC Write Command 写命令
  70          **********************************************/
  71          void Write_IIC_Command(unsigned char IIC_Command)
  72          {
  73   1         IIC_Start();
  74   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0 从机地址0x78
  75   1        IIC_Wait_Ack(); 
  76   1         Write_IIC_Byte(0x00);      //write command
  77   1        IIC_Wait_Ack(); 
  78   1         Write_IIC_Byte(IIC_Command); 
  79   1        IIC_Wait_Ack(); 
  80   1         IIC_Stop();
  81   1      }
  82          /**********************************************
  83          // IIC Write Data 写数据
  84          **********************************************/
  85          void Write_IIC_Data(unsigned char IIC_Data)
  86          {
  87   1         IIC_Start();
  88   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  89   1         IIC_Wait_Ack();  
  90   1         Write_IIC_Byte(0x40);      //write data
  91   1         IIC_Wait_Ack();  
  92   1         Write_IIC_Byte(IIC_Data);
  93   1         IIC_Wait_Ack();  
  94   1         IIC_Stop();
  95   1      }
  96          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  97          {
  98   1        if(cmd)             //输入0写命令(OLED_CMD) 1写数据(OLED_DATA)
  99   1        {
 100   2          Write_IIC_Data(dat);
 101   2        }
 102   1        else 
 103   1        { 
 104   2          Write_IIC_Command(dat);
 105   2        }
 106   1      }
 107          
 108          
 109          //坐标设置
 110          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 111          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 112   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 113   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 114   1      } 
 115          
 116          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
C51 COMPILER V9.60.0.0   OLED                                                              04/25/2025 16:08:42 PAGE 3   

 117          void OLED_Clear(void)  
 118          {  
 119   1        u8 i,n;       
 120   1        for(i=0;i<8;i++)  
 121   1        {  
 122   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 123   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 124   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 125   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 126   2        } //更新显示
 127   1      }
 128          
 129          //在指定位置显示一个字符,包括部分字符
 130          //x:0~127
 131          //y:0~63
 132          //mode:0,反色显示;1,正常显示         
 133          //size:选择字体 16/12 
 134          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 135          {       
 136   1        unsigned char c=0,i=0;  
 137   1          c=chr-' ';//得到偏移后的值      
 138   1          if(x>Max_Column-1){x=0;y=y+2;}
 139   1          if(Char_Size ==16)
 140   1          {
 141   2            OLED_Set_Pos(x,y);  
 142   2            for(i=0;i<8;i++)
 143   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 144   2            OLED_Set_Pos(x,y+1);
 145   2            for(i=0;i<8;i++)
 146   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 147   2          }
 148   1          else 
 149   1          { 
 150   2            OLED_Set_Pos(x,y);
 151   2            for(i=0;i<6;i++)
 152   2            OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 153   2          }
 154   1      }   
 155          
 156          //显示一个字符号串
 157          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 158          {
 159   1        unsigned char j=0;
 160   1        while (chr[j]!='\0')
 161   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 162   2            x+=8;
 163   2          if(x>120){x=0;y+=2;}
 164   2            j++;
 165   2        }
 166   1      }
 167          
 168          /**
 169           * @brief 显示 0~1000 的数值（自动计算位数，最小内存）
 170           * @param x: X 坐标（0~127）
 171           * @param y: Y 坐标（0~7）
 172           * @param value: 要显示的值（0~1000）
 173           * @param size: 字体大小（8 或 16）
 174           */
 175          void OLED_ShowValue(u8 x, u8 y, u32 value, u8 size) 
 176          {
 177   1        u8 i = 0;
 178   1        char buffer[5]; // 存储 "0"~"1000"（4 位 + '\0'）
C51 COMPILER V9.60.0.0   OLED                                                              04/25/2025 16:08:42 PAGE 4   

 179   1      
 180   1        // 将数字转换为字符串
 181   1        buffer[0] = (value / 1000) + '0';       // 千位（0 或 1）
 182   1        buffer[1] = ((value / 100) % 10) + '0'; // 百位
 183   1        buffer[2] = ((value / 10) % 10) + '0';  // 十位
 184   1        buffer[3] = (value % 10) + '0';         // 个位
 185   1        buffer[4] = '\0';                       // 字符串结束符
 186   1      
 187   1        // 跳过前导零（可选，如 "0100" → "100"）
 188   1        while (i < 3 && buffer[i] == '0') i++;
 189   1      
 190   1        // 显示字符串
 191   1        OLED_ShowString(x, y, (u8*)&buffer[i], size);
 192   1      }
 193          
 194          //初始化SSD1306             
 195          void OLED_Init(void)
 196          {   
 197   1       
 198   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 199   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 200   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 201   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 202   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 203   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 204   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 205   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 206   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 207   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 208   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 209   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 210   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 211   1        OLED_WR_Byte(0x00,OLED_CMD);//
 212   1        
 213   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 214   1        OLED_WR_Byte(0x80,OLED_CMD);//
 215   1        
 216   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 217   1        OLED_WR_Byte(0x05,OLED_CMD);//
 218   1        
 219   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 220   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 221   1        
 222   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 223   1        OLED_WR_Byte(0x12,OLED_CMD);//
 224   1        
 225   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 226   1        OLED_WR_Byte(0x30,OLED_CMD);//
 227   1        
 228   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 229   1        OLED_WR_Byte(0x14,OLED_CMD);//
 230   1        
 231   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 232   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    992    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.0.0   OLED                                                              04/25/2025 16:08:42 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
